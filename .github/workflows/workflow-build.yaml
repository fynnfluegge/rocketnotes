name: Reusable Build Workflow

on:
  workflow_call:

jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        python-version: [3.12]

    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('handler-py/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-
            ${{ runner.os }}-python-

      - name: Set output release tag
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: npm install webapp
        run: |
          cd webapp
          npm ci

      - name: test webapp
        run: |
          cd webapp
          npm test -- --watch=false --browsers=ChromeHeadless

      - name: Install Python dependencies
        run: |
          cd handler-py
          uv sync --dev

      - name: Test Python handlers
        run: |
          cd handler-py
          uv run pytest tests/unit -v

      - name: build webapp
        run: |
          cd webapp
          npm run build
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
          DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
          API_URL: ${{ vars.API_URL }}
          COGNITO_USER_POOL_ID: ${{ vars.COGNITO_USER_POOL_ID }}
          COGNITO_APP_CLIENT_ID: ${{ vars.COGNITO_APP_CLIENT_ID }}
          REDIRECT_SIGN_IN: ${{ vars.REDIRECT_SIGN_IN }}
          REDIRECT_SIGN_OUT: ${{ vars.REDIRECT_SIGN_OUT }}
          AUTH_GUARD_REDIRECT: ${{ vars.AUTH_GUARD_REDIRECT }}

      - uses: actions/upload-artifact@master
        with:
          name: webapp-build
          path: webapp/build
