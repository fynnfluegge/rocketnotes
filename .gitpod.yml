image: gitpod/workspace-full

tasks:
  - name: Start DynamoDB
    before: docker-compose up -d
    init: |
      (
        curl -fSsl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -qq awscliv2.zip
        sudo ./aws/install --update
        rm awscliv2.zip
        aws configure set aws_access_key_id 123
        aws configure set aws_secret_access_key 123
        aws configure set region us-east-1
      )
    command: |
      (
        aws dynamodb create-table --endpoint-url http://localhost:8041 --table-name tnn-Tree \
          --attribute-definitions AttributeName=id,AttributeType=S \
          --key-schema AttributeName=id,KeyType=HASH \
          --provisioned-throughput ReadCapacityUnits=2,WriteCapacityUnits=2
        aws dynamodb put-item --endpoint-url http://localhost:8041 --table-name tnn-Tree --item '{"id": {"S": "4afe1f16-add0-11ed-afa1-0242ac120002"},"documents": {"L": [{"M": {"id": {"S": "5b6ae09e-c32a-45ee-bb3b-1c65fc943a9c"},"children": {"NULL": true},"name": {"S": "Cheat Sheet"},"parent": {"S": "root"},"pinned": {"BOOL": false}}}]},"pinned": {"NULL": true},"trash": {"NULL": true}}'
        aws dynamodb create-table --endpoint-url http://localhost:8041 --table-name tnn-Documents \
          --attribute-definitions AttributeName=id,AttributeType=S \
          --key-schema AttributeName=id,KeyType=HASH \
          --provisioned-throughput ReadCapacityUnits=2,WriteCapacityUnits=2
        aws dynamodb put-item --endpoint-url http://localhost:8041 --table-name tnn-Documents --item '{"id": {"S": "5b6ae09e-c32a-45ee-bb3b-1c65fc943a9c"},"content": {"S": "<p align=center>\nThis document provides a general introduction to Markdown syntax and some extensive features, and is intended to serve as a handy cheat sheet for you.\n</p>\n\n# H1\n## H2\n### H3  \n**bold text**  \n*italicized text*  \n~~The world is flat.~~\n\n1. First item\n2. Second item\n3. Third item\n- First item\n- Second item\n- Third item\n\n[some_link](https://www.example.com)\n\n![alt text](https://picsum.photos/200)\n\n---\n\n| Syntax | Description |\n| ----------- | ----------- |\n| Header | Title |\n| Paragraph | Text |\n\n---\n\n\n```\n$ docker run -t -i --rm ubuntu bash\n```\n\n```javascript\nvar doSomeStuff = function(data) {\n     var searchForm = $(#some_form);\n     var searchParms = [];\n\n     for (var i = 0; i < data; i++) {\n         searchParms[i] = data[i];\n     }\n};\n```\n\n---\n"},"lastModified": {"NULL": true},"parentId": {"NULL": true},"title": {"S": "Cheat Sheet"},"userId": {"NULL": true}}'
      )

  - name: Start Lambda functions
    before: brew install aws/tap/aws-sam-cli
    init: sam build
    command: sam local start-api --docker-network rocketnotes_local-serverless-network --warm-containers EAGER 

  - name: Start webapp
    init: |
      (
        cd webapp
        npm install
      )
    command: |
      (
        cd webapp
        npm run start-gitpod
      )

ports:
  - port: 4200
    onOpen: open-preview
    name: Website
    description: Website Preview
  - port: 3000
    visibility: public
    onOpen: ignore
    name: Api
  - port: 8041
    onOpen: ignore
    name: Db